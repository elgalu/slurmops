#!/usr/bin/env bash

# set -e: exit asap if a command exits with a non-zero status
set -e

# set -o pipefail: Don't mask errors from a command piped into another command
set -o pipefail

configfiledst="{{ rootlessdocker_install_dir }}/config/nvidia-container-runtime/config.toml"
configfilesrc=/etc/nvidia-container-runtime/config.toml

if [ -f "$configfilesrc" ]; then
  cp $configfilesrc $configfiledst
  # delete and set no-cgroups to true
  sed -i '/^\[nvidia-container-cli\]$/,/^\[/{/no-cgroups/d}' $configfiledst
  sed -i '/^\[nvidia-container-cli\]$/a no-cgroups = true' $configfiledst
fi


userid=$(id -u)
largestuid=$(cat /etc/subuid | awk '{split($0,a,":"); print a[2]}' | sort -n | tail -1)
mysubuid=$(( largestuid + 65536 ))
cleansubuid=false
if ! grep "^$(id -un):\|^$(id -u):" /etc/subuid >/dev/null 2>&1; then
  echo ${userid}:${mysubuid}:65536 >> /etc/subuid
  cleansubuid=true
fi

largestgid=$(cat /etc/subgid | awk '{split($0,a,":"); print a[2]}' | sort -n | tail -1)
mysubgid=$(( largestgid + 65536 ))
cleansubgid=false
if ! grep "^$(id -un):\|^$(id -u):" /etc/subgid >/dev/null 2>&1; then
  echo ${userid}:${mysubgid}:65536 >> /etc/subgid
  cleansubgid=true
fi

curl -fsSL https://get.docker.com/rootless | \
  SKIP_IPTABLES=1 FORCE_ROOTLESS_INSTALL=1 DOCKER_BIN="{{ rootlessdocker_install_dir }}/bin" sh

installsuccess=false
if [ $? -eq 0 ] ; then
  installsuccess=true
fi

if [ "$cleansubuid" = true ] ; then
  sed -i "/^${userid}:/d" /etc/subuid
fi

if [ "$cleansubgid" = true ] ; then
  sed -i "/^${userid}:/d" /etc/subgid
fi

if [ "$installsuccess" = true ] ; then
  touch "{{ rootlessdocker_install_dir }}/config/install_success"
else
  echo curl -fsSL https://get.docker.com/rootless \| \
    SKIP_IPTABLES=1 FORCE_ROOTLESS_INSTALL=1 DOCKER_BIN="{{ rootlessdocker_install_dir }}/bin" sh
  exit 1
fi

chown root:root {{ rootlessdocker_install_dir }}/bin/*
